!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.7	//
A	Scripts/iconfig.h	/^	int A;$/;"	m	struct:__anon19
ABS	Module/seeker-scheduler/mutate.c	13;"	d	file:
ALL_HIGH	Module/seeker-scheduler/state.h	5;"	d
ALL_LOW	Module/seeker-scheduler/state.h	7;"	d
ARCA	Makefile	/^ARCA := $(shell cat \/proc\/cpuinfo | grep -i AuthenticAMD | wc -l)$/;"	m
ARCA	Makefile	/^ARCA := $(shell cat \/proc\/cpuinfo | grep -i AuthenticIntel | wc -l)$/;"	m
ARCA	Makefile	/^ARCA := C2D$/;"	m
ARCA	Makefile	/^ARCA := K10$/;"	m
ARCA	Module/Makefile	/^ARCA := $(shell cat \/proc\/cpuinfo | grep -i AuthenticAMD | wc -l)$/;"	m
ARCA	Module/Makefile	/^ARCA := $(shell cat \/proc\/cpuinfo | grep -i AuthenticIntel | wc -l)$/;"	m
ARCA	Module/Makefile	/^ARCA := C2D$/;"	m
ARCA	Module/Makefile	/^ARCA := K10$/;"	m
ARCA	Scripts/Makefile	/^ARCA := C2D$/;"	m
ARCHITECTURE	Module/seeker-sampler/main.c	60;"	d	file:
ARCHITECTURE	Module/seeker-sampler/main.c	62;"	d	file:
ARCHITECTURE	Module/seeker-sampler/main.c	64;"	d	file:
ARRAY_H_	Scripts/Array.h	25;"	d
Array	Scripts/Array.h	/^Array<T>::Array(){$/;"	f	class:Array
Array	Scripts/Array.h	/^Array<T>::Array(T * carr, int len){$/;"	f	class:Array
Array	Scripts/Array.h	/^Array<T>::Array(int num){$/;"	f	class:Array
Array	Scripts/Array.h	/^class Array{	$/;"	c
B	Scripts/iconfig.h	/^	int B;$/;"	m	struct:__anon19
BALANCE	Module/seeker-scheduler/state.h	6;"	d
BUFFER_SIZE	Scripts/debugd.c	37;"	d	file:
BUFFER_SIZE	Scripts/seekerd.c	37;"	d	file:
CC	Scripts/Makefile	/^CC = gcc$/;"	m
CFLAGS	Scripts/Makefile	/^CFLAGS = -O3$/;"	m
CPUMASK_TO_UINT	Module/seeker-scheduler/assigncpu.c	16;"	d	file:
CPUS	Makefile	/^CPUS := $(shell cat \/proc\/cpuinfo | grep processor | wc -l)$/;"	m
CPUS	Scripts/Makefile	/^CPUS := $(shell cat \/proc\/cpuinfo | grep processor | wc -l)$/;"	m
CTR0_OVERFLOW_CLEAR_MASK	Module/pmu/pmu.h	38;"	d
CTR0_OVERFLOW_CLEAR_MASK	Module/pmu/pmu.h	46;"	d
CTR0_OVERFLOW_MASK	Module/pmu/pmu.h	36;"	d
CTR0_OVERFLOW_MASK	Module/pmu/pmu.h	42;"	d
CTR1_OVERFLOW_CLEAR_MASK	Module/pmu/pmu.h	39;"	d
CTR1_OVERFLOW_CLEAR_MASK	Module/pmu/pmu.h	47;"	d
CTR1_OVERFLOW_MASK	Module/pmu/pmu.h	37;"	d
CTR1_OVERFLOW_MASK	Module/pmu/pmu.h	43;"	d
CTR2_OVERFLOW_CLEAR_MASK	Module/pmu/pmu.h	48;"	d
CTR2_OVERFLOW_MASK	Module/pmu/pmu.h	44;"	d
CTR3_OVERFLOW_CLEAR_MASK	Module/pmu/pmu.h	49;"	d
CTR3_OVERFLOW_MASK	Module/pmu/pmu.h	45;"	d
CXX	Scripts/Makefile	/^CXX = g++$/;"	m
DEBUG_MUT	Module/include/seeker.h	/^enum {DEBUG_SCH, DEBUG_MUT};$/;"	e	enum:__anon2
DEBUG_SCH	Module/include/seeker.h	/^enum {DEBUG_SCH, DEBUG_MUT};$/;"	e	enum:__anon2
Data	Scripts/Array.h	/^		T * Data;$/;"	m	class:Array
EVTSEL0	Module/pmu/pmu.h	56;"	d
EVTSEL0	Module/pmu/pmu.h	64;"	d
EVTSEL1	Module/pmu/pmu.h	57;"	d
EVTSEL1	Module/pmu/pmu.h	65;"	d
EVTSEL2	Module/pmu/pmu.h	66;"	d
EVTSEL3	Module/pmu/pmu.h	67;"	d
EVTSEL_RESERVED_BITS	Module/pmu/pmu.h	35;"	d
EVTSEL_RESERVED_BITS	Module/pmu/pmu.h	41;"	d
FIXED_CTR0_OVERFLOW_CLEAR_MASK	Module/fpmu/fpmu.h	39;"	d
FIXED_CTR0_OVERFLOW_MASK	Module/fpmu/fpmu.h	36;"	d
FIXED_CTR1_OVERFLOW_CLEAR_MASK	Module/fpmu/fpmu.h	40;"	d
FIXED_CTR1_OVERFLOW_MASK	Module/fpmu/fpmu.h	37;"	d
FIXED_CTR2_OVERFLOW_CLEAR_MASK	Module/fpmu/fpmu.h	41;"	d
FIXED_CTR2_OVERFLOW_MASK	Module/fpmu/fpmu.h	38;"	d
FIXSEL_RESERVED_BITS	Module/fpmu/fpmu.h	35;"	d
IA32_THERM_STATUS	Module/therm/therm.h	35;"	d
IA32_THERM_STATUS	Module/therm/therm.h	39;"	d
IA32_THERM_STATUS	Module/therm/therm.h	42;"	d
INCLUDE	Scripts/Makefile	/^INCLUDE := -I$(shell pwd)\/..\/Module\/include -I$(shell pwd)\/..\/Module\/scpufreq$/;"	m
INCLUDE_DIRS	Module/Makefile	/^INCLUDE_DIRS := -I$(PWD)\/include	\\$/;"	m
INPUT_FORMAT	Scripts/iconfig.h	33;"	d
INST_THRESHOLD	Module/seeker-scheduler/assigncpu.c	34;"	d	file:
IPC	Module/seeker-scheduler/assigncpu.c	19;"	d	file:
IPC_0_000	Module/seeker-scheduler/assigncpu.c	20;"	d	file:
IPC_0_125	Module/seeker-scheduler/assigncpu.c	21;"	d	file:
IPC_0_250	Module/seeker-scheduler/assigncpu.c	22;"	d	file:
IPC_0_375	Module/seeker-scheduler/assigncpu.c	23;"	d	file:
IPC_0_500	Module/seeker-scheduler/assigncpu.c	24;"	d	file:
IPC_0_625	Module/seeker-scheduler/assigncpu.c	25;"	d	file:
IPC_0_750	Module/seeker-scheduler/assigncpu.c	26;"	d	file:
IPC_0_875	Module/seeker-scheduler/assigncpu.c	27;"	d	file:
IPC_1_000	Module/seeker-scheduler/assigncpu.c	28;"	d	file:
KDIR	Module/Makefile	/^KDIR    := \/lib\/modules\/$(shell uname -r)\/build$/;"	m
KERNEL_VERSION	Module/include/seeker.h	95;"	d
MAX_COUNTERS_PER_CPU	Module/include/seeker.h	36;"	d
MAX_INSTRUCTIONS_BEFORE_SCHEDULE	Module/seeker-sampler/sample.c	47;"	d	file:
MAX_INSTRUCTIONS_BEFORE_SCHEDULE	Module/seeker-scheduler/main.c	44;"	d	file:
MAX_STATES	Module/scpufreq/scpufreq.h	6;"	d
MOD_FLAGS	Module/Makefile	/^MOD_FLAGS := -DMODULE -O3 -march=nocona -DARCH_$(ARCA) $(INCLUDE_DIRS) -DDEBUG$/;"	m
MOD_FLAGS	Module/Makefile	/^MOD_FLAGS := -DMODULE -O3 -march=nocona -DARCH_$(ARCA) $(INCLUDE_DIRS) -Wall$/;"	m
MSR_PERF_FIXED_CTR0	Module/fpmu/fpmu.h	50;"	d
MSR_PERF_FIXED_CTR1	Module/fpmu/fpmu.h	51;"	d
MSR_PERF_FIXED_CTR2	Module/fpmu/fpmu.h	52;"	d
MSR_PERF_FIXED_CTR_CTRL	Module/fpmu/fpmu.h	53;"	d
MSR_PERF_GLOBAL_CTRL	Module/fpmu/fpmu.h	55;"	d
MSR_PERF_GLOBAL_CTRL	Module/pmu/pmu.h	61;"	d
MSR_PERF_GLOBAL_CTRL	Module/pmu/pmu.h	73;"	d
MSR_PERF_GLOBAL_OVF_CTRL	Module/fpmu/fpmu.h	56;"	d
MSR_PERF_GLOBAL_OVF_CTRL	Module/pmu/pmu.h	62;"	d
MSR_PERF_GLOBAL_OVF_CTRL	Module/pmu/pmu.h	74;"	d
MSR_PERF_GLOBAL_STATUS	Module/fpmu/fpmu.h	54;"	d
MSR_PERF_GLOBAL_STATUS	Module/pmu/pmu.h	60;"	d
MSR_PERF_GLOBAL_STATUS	Module/pmu/pmu.h	72;"	d
NUM_COUNTERS	Module/include/pmu_public.h	10;"	d
NUM_COUNTERS	Module/include/pmu_public.h	6;"	d
NUM_COUNTERS	Module/include/pmu_public.h	8;"	d
NUM_EXTRA_COUNTERS	Module/include/seeker.h	34;"	d
NUM_FIXED_COUNTERS	Module/include/fpmu_public.h	6;"	d
NUM_FIXED_COUNTERS	Module/include/fpmu_public.h	8;"	d
PIDTAB_ENTRY	Module/include/seeker.h	/^enum {SAMPLE_DEF, SEEKER_SAMPLE, PIDTAB_ENTRY};$/;"	e	enum:__anon1
PMC0	Module/pmu/pmu.h	58;"	d
PMC0	Module/pmu/pmu.h	68;"	d
PMC1	Module/pmu/pmu.h	59;"	d
PMC1	Module/pmu/pmu.h	69;"	d
PMC2	Module/pmu/pmu.h	70;"	d
PMC3	Module/pmu/pmu.h	71;"	d
PMU_INST_EVTSEL	Module/seeker-scheduler/hwcounters.h	11;"	d
PMU_INST_MASK	Module/seeker-scheduler/hwcounters.h	12;"	d
PMU_ISR	Module/seeker-sampler/probe.h	30;"	d
PMU_RECY_EVTSEL	Module/seeker-scheduler/hwcounters.h	13;"	d
PMU_RECY_MASK	Module/seeker-scheduler/hwcounters.h	14;"	d
PMU_RFCY_EVTSEL	Module/seeker-scheduler/hwcounters.h	15;"	d
PMU_RFCY_MASK	Module/seeker-scheduler/hwcounters.h	16;"	d
POWER_IF_NUM	Module/power/power.h	6;"	d
PRIMARY	Scripts/iconfig.h	38;"	d
PWD	Module/Makefile	/^PWD     := $(shell pwd)$/;"	m
P_ASSERT_EXIT	Scripts/debugd.c	36;"	d	file:
P_ASSERT_EXIT	Scripts/seekerd.c	36;"	d	file:
SAMPLE_DEF	Module/include/seeker.h	/^enum {SAMPLE_DEF, SEEKER_SAMPLE, PIDTAB_ENTRY};$/;"	e	enum:__anon1
SCHED_EXIT_EXISTS	Module/seeker-sampler/probe.c	48;"	d	file:
SEEKER_SAMPLE	Module/include/seeker.h	/^enum {SAMPLE_DEF, SEEKER_SAMPLE, PIDTAB_ENTRY};$/;"	e	enum:__anon1
SEEKER_SAMPLE_MINOR	Module/seeker-sampler/main.c	50;"	d	file:
SPLINE	Scripts/iconfig.h	/^		SPLINE(){$/;"	f	class:SPLINE
SPLINE	Scripts/iconfig.h	/^		SPLINE(int size){$/;"	f	class:SPLINE
SPLINE	Scripts/iconfig.h	/^class SPLINE{$/;"	c
THERM_SUPPORTED	Module/include/therm_public.h	10;"	d
THERM_SUPPORTED	Module/include/therm_public.h	6;"	d
THERM_SUPPORTED	Module/include/therm_public.h	8;"	d
THERM_SUPPORTED	Module/therm/therm.h	37;"	d
THERM_VALID_MASK	Module/therm/therm.h	36;"	d
THERM_VALID_MASK	Module/therm/therm.h	40;"	d
THERM_VALID_MASK	Module/therm/therm.h	43;"	d
TIME_STAMP_COUNTER	Module/tsc/tsc.h	34;"	d
TOTAL_COLUMNS	Scripts/iconfig.h	36;"	d
TjMax	Module/therm/therm.c	/^int TjMax[NR_CPUS] = {0};$/;"	v
Yint	Scripts/iconfig.h	/^		Array<double> Yint;$/;"	m	class:SPLINE
_FPMU_H_	Module/fpmu/fpmu.h	28;"	d
_HW_COUNTERS_H_	Module/seeker-scheduler/hwcounters.h	3;"	d
_PMU_H_	Module/pmu/pmu.h	28;"	d
_SEEKER_SAMPLER_H_	Module/include/seeker.h	26;"	d
_THERM_H_	Module/therm/therm.h	28;"	d
_TSC_H_	Module/tsc/tsc.h	27;"	d
__ALLOC_H_	Module/seeker-sampler/alloc.h	26;"	d
__ASSIGNCPU_H_	Module/seeker-scheduler/assigncpu.h	3;"	d
__DEBUG_H_	Module/seeker-scheduler/debug.h	3;"	d
__EXIT_H_	Module/seeker-sampler/exit.h	26;"	d
__FPMU_PUBLIC_H_	Module/include/fpmu_public.h	3;"	d
__INTR_H_	Module/seeker-sampler/intr.h	26;"	d
__LOG_H_	Module/seeker-sampler/log.h	27;"	d
__MUTATE_H_	Module/seeker-scheduler/mutate.h	3;"	d
__PMU_PUBLIC_H_	Module/include/pmu_public.h	3;"	d
__POWER_H_	Module/power/power.h	4;"	d
__PROBE_H_	Module/seeker-sampler/probe.h	26;"	d
__SAMPLE_H_	Module/seeker-sampler/sample.h	26;"	d
__SCPUFREQ_H_	Module/scpufreq/scpufreq.h	3;"	d
__STATE_H_	Module/seeker-scheduler/state.h	3;"	d
__THERM_PUBLIC_H_	Module/include/therm_public.h	3;"	d
__TSC_PUBLIC_H_	Module/include/tsc_public.h	3;"	d
addr	Module/fpmu/fpmu.h	/^	u32 addr;$/;"	m	struct:__anon18
addr	Module/pmu/pmu.h	/^	u32 addr;$/;"	m	struct:__anon13
addr	Module/pmu/pmu.h	/^	u32 addr;$/;"	m	struct:__anon15
all	Module/fpmu/fpmu.h	/^	u64 all;$/;"	m	struct:__anon17
all	Module/pmu/pmu.h	/^	u64 all;$/;"	m	struct:__anon14
alloc_seeker	Module/seeker-sampler/alloc.c	/^struct log_block * alloc_seeker(void)$/;"	f
append	Scripts/Array.h	/^void Array<T>::append(Array<T> dat){$/;"	f	class:Array
append	Scripts/Array.h	/^void Array<T>::append(T * carr, int len){$/;"	f	class:Array
append	Scripts/Array.h	/^void Array<T>::append(T dat){$/;"	f	class:Array
buf	Scripts/debugd.c	/^static char buf[BUFFER_SIZE];$/;"	v	file:
buf	Scripts/seekerd.c	/^static char buf[BUFFER_SIZE];$/;"	v	file:
catchSig	Scripts/debugd.c	/^void catchSig()$/;"	f
catchSig	Scripts/seekerd.c	/^void catchSig()$/;"	f
catchTerm	Scripts/debugd.c	/^void catchTerm()$/;"	f
catchTerm	Scripts/seekerd.c	/^void catchTerm()$/;"	f
change_interval	Module/seeker-scheduler/main.c	/^int change_interval = 5;$/;"	v
choose_layout	Module/seeker-scheduler/mutate.c	/^void choose_layout(int delta)$/;"	f
clear_counters	Module/seeker-sampler/sample.c	/^void clear_counters(void)$/;"	f
clear_counters	Module/seeker-scheduler/hwcounters.c	/^void clear_counters(int cpu)$/;"	f
clear_ovf_status	Module/seeker-sampler/intr.h	/^	int (*clear_ovf_status)(int);$/;"	m	struct:struct_int_callbacks
cleared	Module/pmu/pmu.c	/^cleared_t cleared[NR_CPUS][NUM_COUNTERS] = {$/;"	v
cleared_t	Module/pmu/pmu.h	/^}cleared_t;$/;"	t	typeref:struct:__anon14
cnt_mask	Module/pmu/pmu.h	/^	u32 cnt_mask:8;$/;"	m	struct:__anon13
config_counters	Module/seeker-sampler/sample.c	/^int config_counters(void)$/;"	f
configure_counters	Module/seeker-scheduler/hwcounters.c	/^int configure_counters(void)$/;"	f
configure_disable_interrupts	Module/seeker-sampler/intr.c	/^void configure_disable_interrupts(void)$/;"	f
configure_enable_interrupts	Module/seeker-sampler/intr.c	/^void configure_enable_interrupts(void)$/;"	f
configure_interrupts	Module/seeker-sampler/intr.h	/^	int (*configure_interrupts)(int, u32, u32);$/;"	m	struct:struct_int_callbacks
construct	Scripts/iconfig.h	/^		void construct(double from, double to, Array<double> Y_from, Array<double> Y_to){$/;"	f	class:SPLINE
control_clear	Module/fpmu/fpmu.c	/^EXPORT_SYMBOL_GPL(control_clear);$/;"	v
control_clear	Module/fpmu/fpmu.c	/^inline void control_clear(void)$/;"	f
control_read	Module/fpmu/fpmu.c	/^EXPORT_SYMBOL_GPL(control_read);$/;"	v
control_read	Module/fpmu/fpmu.c	/^inline u32 control_read(void)$/;"	f
control_write	Module/fpmu/fpmu.c	/^EXPORT_SYMBOL_GPL(control_write);$/;"	v
control_write	Module/fpmu/fpmu.c	/^inline void control_write(void)$/;"	f
count	Module/include/seeker.h	/^	unsigned int count;$/;"	m	struct:__anon4
count	Scripts/debugd.c	/^int count = 0;$/;"	v
count	Scripts/seekerd.c	/^int count = 0;$/;"	v
count_c	Scripts/debugd.c	/^char count_c[20];$/;"	v
count_c	Scripts/seekerd.c	/^char count_c[20];$/;"	v
counter_clear	Module/pmu/pmu.c	/^EXPORT_SYMBOL_GPL(counter_clear);$/;"	v
counter_clear	Module/pmu/pmu.c	/^inline void counter_clear(u32 counter)$/;"	f
counter_disable	Module/pmu/pmu.c	/^EXPORT_SYMBOL_GPL(counter_disable);$/;"	v
counter_disable	Module/pmu/pmu.c	/^inline void counter_disable(int counter) $/;"	f
counter_enable	Module/pmu/pmu.c	/^EXPORT_SYMBOL_GPL(counter_enable);$/;"	v
counter_enable	Module/pmu/pmu.c	/^int counter_enable(u32 event, u32 ev_mask, u32 os)$/;"	f
counter_read	Module/pmu/pmu.c	/^EXPORT_SYMBOL_GPL(counter_read);$/;"	v
counter_read	Module/pmu/pmu.c	/^void counter_read(void)$/;"	f
counter_t	Module/pmu/pmu.h	/^}counter_t;$/;"	t	typeref:struct:__anon15
counters	Module/include/seeker.h	/^	unsigned char counters[MAX_COUNTERS_PER_CPU];$/;"	m	struct:__anon7
counters	Module/include/seeker.h	/^	unsigned long long counters[MAX_COUNTERS_PER_CPU];$/;"	m	struct:__anon8
counters	Module/pmu/pmu.c	/^counter_t counters[NR_CPUS][NUM_COUNTERS] = {$/;"	v
cpu	Module/include/seeker.h	/^	unsigned int cpu;$/;"	m	struct:__anon8
cpu	Module/scpufreq/scpufreq.h	/^	unsigned int cpu;$/;"	m	struct:freq_info_t
cpu_counters	Module/seeker-sampler/sample.c	/^int cpu_counters[NR_CPUS][MAX_COUNTERS_PER_CPU];$/;"	v
cpu_cycles	Module/include/seeker.h	/^	unsigned long long cpu_cycles;$/;"	m	struct:__anon9
cpu_pid	Module/seeker-sampler/sample.c	/^pid_t cpu_pid[NR_CPUS] = {-1};$/;"	v
cpumask	Module/include/seeker.h	/^	unsigned int cpumask;$/;"	m	struct:__anon3
cpumask	Module/seeker-scheduler/state.h	/^	cpumask_t cpumask;$/;"	m	struct:state_desc
cpus	Module/seeker-scheduler/state.h	/^	short cpus;$/;"	m	struct:state_desc
cpustates	Module/include/seeker.h	/^	short cpustates[NR_CPUS];$/;"	m	struct:__anon4
cur_cpu_state	Module/seeker-scheduler/state.c	/^int cur_cpu_state[NR_CPUS] = {0};$/;"	v
cur_freq	Module/scpufreq/scpufreq.h	/^	unsigned int cur_freq;$/;"	m	struct:freq_info_t
current_debug	Module/seeker-scheduler/debug.c	/^static struct debug_block *current_debug = NULL;$/;"	v	typeref:struct:debug_block	file:
cycles	Module/include/seeker.h	/^	unsigned long long cycles;$/;"	m	struct:__anon8
data	Scripts/Array.h	/^Array<T> Array<T>::data(Array<int> slice){$/;"	f	class:Array
data	Scripts/Array.h	/^Array<T> Array<T>::data(int from, int to){$/;"	f	class:Array
data	Scripts/Array.h	/^T Array<T>::data(int index){$/;"	f	class:Array
debug	Module/include/seeker.h	104;"	d
debug	Module/include/seeker.h	106;"	d
debug_block	Module/seeker-scheduler/debug.h	/^struct debug_block{$/;"	s
debug_cachep	Module/seeker-scheduler/debug.c	/^static struct kmem_cache *debug_cachep = NULL;$/;"	v	typeref:struct:kmem_cache	file:
debug_exit	Module/seeker-scheduler/debug.c	/^void debug_exit(void)$/;"	f
debug_free	Module/seeker-scheduler/debug.c	/^void debug_free(struct debug_block *p)$/;"	f
debug_init	Module/seeker-scheduler/debug.c	/^int debug_init(void)$/;"	f
debug_lock	Module/seeker-scheduler/debug.c	/^static spinlock_t debug_lock = SPIN_LOCK_UNLOCKED;$/;"	v	file:
debug_mutator_t	Module/include/seeker.h	/^} debug_mutator_t;$/;"	t	typeref:struct:__anon4
debug_scheduler_t	Module/include/seeker.h	/^} debug_scheduler_t;$/;"	t	typeref:struct:__anon3
debug_t	Module/include/seeker.h	/^} debug_t;$/;"	t	typeref:struct:__anon5
dec_freq	Module/scpufreq/scpufreq.c	/^EXPORT_SYMBOL_GPL(dec_freq);$/;"	v
dec_freq	Module/scpufreq/scpufreq.c	/^int dec_freq(unsigned int cpu)$/;"	f
delete_log	Module/seeker-sampler/log.c	/^void delete_log(struct log_block *ent)$/;"	f
delta	Module/seeker-scheduler/main.c	/^int delta=1;$/;"	v
demand	Module/seeker-scheduler/state.h	/^	unsigned int demand;$/;"	m	struct:state_desc
dev_created	Module/seeker-scheduler/debug.c	/^static int dev_created = 0;$/;"	v	file:
dev_open	Module/seeker-sampler/main.c	/^int dev_open = 0;$/;"	v
dev_open	Module/seeker-scheduler/debug.c	/^static int dev_open = 0;$/;"	v	file:
disable_interrupts	Module/seeker-sampler/intr.h	/^	int (*disable_interrupts)(int);$/;"	m	struct:struct_int_callbacks
div	Module/seeker-scheduler/mutate.c	14;"	d	file:
do_exit	Scripts/debugd.c	/^void do_exit(void) $/;"	f
do_exit	Scripts/seekerd.c	/^void do_exit(void) $/;"	f
do_oper	Scripts/iconfig.h	/^Array<T> do_oper(Array<T> A){$/;"	f
do_per_dir	Scripts/seeker.pm	/^sub do_per_dir{$/;"	s
do_pid_log	Module/seeker-sampler/sample.c	/^void do_pid_log(struct task_struct *p) $/;"	f
do_sample	Module/seeker-sampler/sample.c	/^void do_sample(void) $/;"	f
do_sample	Scripts/debugd.c	/^int do_sample = 1;$/;"	v
do_sample	Scripts/seekerd.c	/^int do_sample = 1;$/;"	v
do_timer_sample	Module/seeker-sampler/intr.c	/^void do_timer_sample(unsigned long param)$/;"	f
edge	Module/pmu/pmu.h	/^	u32 edge:1;$/;"	m	struct:__anon13
empty	Scripts/Array.h	/^void Array<T>::empty(void){$/;"	f	class:Array
enable_apic_pmu	Module/seeker-sampler/intr.c	/^void enable_apic_pmu(void)$/;"	f
enable_interrupts	Module/seeker-sampler/intr.h	/^	int (*enable_interrupts)(int);$/;"	m	struct:struct_int_callbacks
enable_pmu_counters	Module/seeker-scheduler/hwcounters.c	/^void enable_pmu_counters(void)$/;"	f
enabled	Module/pmu/pmu.h	/^	u32 enabled:1;$/;"	m	struct:__anon13
enabled	Module/pmu/pmu.h	/^	u32 enabled;$/;"	m	struct:__anon15
entry	Module/seeker-scheduler/debug.h	/^	debug_t entry;$/;"	m	struct:debug_block
error	Module/include/seeker.h	99;"	d
ev_mask	Module/pmu/pmu.h	/^	u32 ev_mask:8;$/;"	m	struct:__anon13
ev_select	Module/pmu/pmu.h	/^	u32 ev_select:8;$/;"	m	struct:__anon13
event	Module/pmu/pmu.h	/^	u32 event;$/;"	m	struct:__anon15
evtsel	Module/pmu/pmu.c	/^evtsel_t evtsel[NR_CPUS][NUM_COUNTERS] = {$/;"	v
evtsel_clear	Module/pmu/pmu.c	/^EXPORT_SYMBOL_GPL(evtsel_clear);$/;"	v
evtsel_clear	Module/pmu/pmu.c	/^inline void evtsel_clear(u32 evtsel_num)$/;"	f
evtsel_read	Module/pmu/pmu.c	/^EXPORT_SYMBOL_GPL(evtsel_read);$/;"	v
evtsel_read	Module/pmu/pmu.c	/^inline u32 evtsel_read(u32 evtsel_num) $/;"	f
evtsel_t	Module/pmu/pmu.h	/^}evtsel_t;$/;"	t	typeref:struct:__anon13
evtsel_write	Module/pmu/pmu.c	/^EXPORT_SYMBOL_GPL(evtsel_write);$/;"	v
evtsel_write	Module/pmu/pmu.c	/^inline void evtsel_write(u32 evtsel_num)$/;"	f
exit_power	Module/power/power.c	/^module_exit(exit_power);$/;"	v
exit_power	Module/power/power.c	/^static void __exit exit_power(void)$/;"	f	file:
extract_relative	Scripts/seeker.pm	/^sub extract_relative{$/;"	s
fcleared	Module/fpmu/fpmu.c	/^fcleared_t fcleared[NR_CPUS][NUM_FIXED_COUNTERS] = {$/;"	v
fcleared_t	Module/fpmu/fpmu.h	/^}fcleared_t;$/;"	t	typeref:struct:__anon17
fcontrol	Module/fpmu/fpmu.c	/^fixctrl_t fcontrol[NR_CPUS] = {$/;"	v
fcounter_clear	Module/fpmu/fpmu.c	/^EXPORT_SYMBOL_GPL(fcounter_clear);$/;"	v
fcounter_clear	Module/fpmu/fpmu.c	/^inline void fcounter_clear(u32 counter)$/;"	f
fcounter_names	Module/fpmu/fpmu.c	/^char *fcounter_names[NUM_FIXED_COUNTERS] = {$/;"	v
fcounter_read	Module/fpmu/fpmu.c	/^EXPORT_SYMBOL_GPL(fcounter_read);$/;"	v
fcounter_read	Module/fpmu/fpmu.c	/^void fcounter_read(void)$/;"	f
fcounter_t	Module/fpmu/fpmu.h	/^} fcounter_t;$/;"	t	typeref:struct:__anon18
fcounters	Module/fpmu/fpmu.c	/^fcounter_t fcounters[NR_CPUS][NUM_FIXED_COUNTERS] = {$/;"	v
fcounters_disable	Module/fpmu/fpmu.c	/^EXPORT_SYMBOL_GPL(fcounters_disable);$/;"	v
fcounters_disable	Module/fpmu/fpmu.c	/^inline void fcounters_disable(void)$/;"	f
fcounters_enable	Module/fpmu/fpmu.c	/^EXPORT_SYMBOL_GPL(fcounters_enable);$/;"	v
fcounters_enable	Module/fpmu/fpmu.c	/^void fcounters_enable(u32 os)$/;"	f
fill	Scripts/Array.h	/^void Array<T>::fill(int index, T data){$/;"	f	class:Array
finalize_seeker_cache	Module/seeker-sampler/alloc.c	/^void finalize_seeker_cache(void)$/;"	f
first_read	Module/seeker-sampler/log.c	/^static int first_read = 1;$/;"	v	file:
first_read	Module/seeker-scheduler/debug.c	/^static int first_read = 1;$/;"	v	file:
fixctrl_t	Module/fpmu/fpmu.h	/^} fixctrl_t;$/;"	t	typeref:struct:__anon16
foreach	Scripts/Array.h	36;"	d
fpmu_clear_ovf_status	Module/fpmu/fpmu.c	/^EXPORT_SYMBOL_GPL(fpmu_clear_ovf_status);$/;"	v
fpmu_clear_ovf_status	Module/fpmu/fpmu.c	/^int fpmu_clear_ovf_status(int ctr)$/;"	f
fpmu_configure_interrupt	Module/fpmu/fpmu.c	/^EXPORT_SYMBOL_GPL(fpmu_configure_interrupt);$/;"	v
fpmu_configure_interrupt	Module/fpmu/fpmu.c	/^int fpmu_configure_interrupt(int ctr, u32 low, u32 high)$/;"	f
fpmu_disable_interrupt	Module/fpmu/fpmu.c	/^EXPORT_SYMBOL_GPL(fpmu_disable_interrupt);$/;"	v
fpmu_disable_interrupt	Module/fpmu/fpmu.c	/^int fpmu_disable_interrupt(int ctr)$/;"	f
fpmu_enable_interrupt	Module/fpmu/fpmu.c	/^EXPORT_SYMBOL_GPL(fpmu_enable_interrupt);$/;"	v
fpmu_enable_interrupt	Module/fpmu/fpmu.c	/^int fpmu_enable_interrupt(int ctr)$/;"	f
fpmu_exit	Module/fpmu/fpmu.c	/^module_exit(fpmu_exit);$/;"	v
fpmu_exit	Module/fpmu/fpmu.c	/^static void __exit fpmu_exit(void)$/;"	f	file:
fpmu_init	Module/fpmu/fpmu.c	/^module_init(fpmu_init);$/;"	v
fpmu_init	Module/fpmu/fpmu.c	/^static int __init fpmu_init(void)$/;"	f	file:
fpmu_init_msrs	Module/fpmu/fpmu.c	/^EXPORT_SYMBOL_GPL(fpmu_init_msrs);$/;"	v
fpmu_init_msrs	Module/fpmu/fpmu.c	/^void fpmu_init_msrs(void)$/;"	f
fpmu_is_interrupt	Module/fpmu/fpmu.c	/^EXPORT_SYMBOL_GPL(fpmu_is_interrupt);$/;"	v
fpmu_is_interrupt	Module/fpmu/fpmu.c	/^int fpmu_is_interrupt(int ctr)$/;"	f
fprint	Scripts/Array.h	/^void Array<T>::fprint(ofstream &outf){$/;"	f	class:Array
fprint	Scripts/Array.h	/^void Array<T>::fprint(ofstream &outf, int col){$/;"	f	class:Array
free_seeker	Module/seeker-sampler/alloc.c	/^void free_seeker(struct log_block * entry)$/;"	f
freq_count	Module/scpufreq/scpufreq.c	/^unsigned int freq_count = -1;$/;"	v
freq_info	Module/scpufreq/scpufreq.c	/^struct freq_info_t freq_info[NR_CPUS];$/;"	v	typeref:struct:freq_info_t
freq_info_t	Module/scpufreq/scpufreq.h	/^struct freq_info_t{$/;"	s
freqs	Module/scpufreq/scpufreq.c	/^unsigned int freqs[NR_CPUS];$/;"	v
generic_close	Module/seeker-sampler/io.c	/^int generic_close(struct inode *i, struct file *f) $/;"	f
generic_open	Module/seeker-sampler/io.c	/^int generic_open(struct inode *i, struct file *f) $/;"	f
get_counter_data	Module/pmu/pmu.c	/^EXPORT_SYMBOL_GPL(get_counter_data);$/;"	v
get_counter_data	Module/pmu/pmu.c	/^u64 get_counter_data(u32 counter, u32 cpu_id)$/;"	f
get_debug	Module/seeker-scheduler/debug.c	/^struct debug_block *get_debug(void)$/;"	f
get_dir_tree	Scripts/seeker.pm	/^sub get_dir_tree{$/;"	s
get_fcounter_data	Module/fpmu/fpmu.c	/^EXPORT_SYMBOL_GPL(get_fcounter_data);$/;"	v
get_fcounter_data	Module/fpmu/fpmu.c	/^u64 get_fcounter_data(u32 counter, u32 cpu_id)$/;"	f
get_freq	Module/scpufreq/scpufreq.c	/^EXPORT_SYMBOL_GPL(get_freq);$/;"	v
get_freq	Module/scpufreq/scpufreq.c	/^unsigned int get_freq(unsigned int cpu)$/;"	f
get_last_time_stamp	Module/tsc/tsc.c	/^EXPORT_SYMBOL_GPL(get_last_time_stamp);$/;"	v
get_last_time_stamp	Module/tsc/tsc.c	/^u64 get_last_time_stamp(u32 cpu_id)$/;"	f
get_max_states	Module/scpufreq/scpufreq.c	/^EXPORT_SYMBOL_GPL(get_max_states);$/;"	v
get_max_states	Module/scpufreq/scpufreq.c	/^int get_max_states(int cpu)$/;"	f
get_power	Module/power/power.c	/^void get_power(void)$/;"	f
get_temp	Module/therm/therm.c	/^EXPORT_SYMBOL_GPL(get_temp);$/;"	v
get_temp	Module/therm/therm.c	/^int get_temp(int cpu)$/;"	f
get_time_stamp	Module/tsc/tsc.c	/^EXPORT_SYMBOL_GPL(get_time_stamp);$/;"	v
get_time_stamp	Module/tsc/tsc.c	/^u64 get_time_stamp(u32 cpu_id)$/;"	f
header	Scripts/iconfig.h	/^char header[200] = "INSTR,RE_IPC,RF_IPC,L2_MISS,TEMPR";$/;"	v
high	Module/fpmu/fpmu.h	/^	u32 high:32;$/;"	m	struct:__anon18
high	Module/fpmu/fpmu.h	/^	u32 high;$/;"	m	struct:__anon17
high	Module/pmu/pmu.h	/^	u32 high:32;$/;"	m	struct:__anon15
high	Module/pmu/pmu.h	/^	u32 high;$/;"	m	struct:__anon14
high	Module/tsc/tsc.h	/^	u32 high;$/;"	m	struct:__anon12
high	Scripts/iconfig.h	/^		double low,high;$/;"	m	class:SPLINE
hint	Module/include/seeker.h	/^	unsigned int hint[MAX_STATES];$/;"	m	struct:__anon4
hint_dec	Module/seeker-scheduler/state.c	/^EXPORT_SYMBOL_GPL(hint_dec);$/;"	v
hint_dec	Module/seeker-scheduler/state.c	/^void hint_dec(int state)$/;"	f
hint_inc	Module/seeker-scheduler/state.c	/^EXPORT_SYMBOL_GPL(hint_inc);$/;"	v
hint_inc	Module/seeker-scheduler/state.c	/^void hint_inc(int state)$/;"	f
inc_freq	Module/scpufreq/scpufreq.c	/^EXPORT_SYMBOL_GPL(inc_freq);$/;"	v
inc_freq	Module/scpufreq/scpufreq.c	/^int inc_freq(unsigned int cpu)$/;"	f
index	Scripts/smooth.C	/^inline Array<T> index(Array<Array<T> > * data, int ind){$/;"	f
infile	Scripts/debugd.c	/^static FILE *infile, *outfile;$/;"	v	file:
infile	Scripts/seekerd.c	/^static FILE *infile, *outfile;$/;"	v	file:
infile_name	Scripts/debugd.c	/^char infile_name[] = "\/dev\/seeker_debug"; $/;"	v
infile_name	Scripts/seekerd.c	/^char infile_name[] = "\/dev\/seeker_samples"; $/;"	v
init	Module/seeker-scheduler/main.c	/^int init = ALL_HIGH;$/;"	v
init_cpu_states	Module/seeker-scheduler/state.c	/^int init_cpu_states(unsigned int how)$/;"	f
init_ipmi_interface	Module/power/power.c	/^inline int init_ipmi_interface(void)$/;"	f
init_power	Module/power/power.c	/^module_init(init_power);$/;"	v
init_power	Module/power/power.c	/^static int __init init_power(void)$/;"	f	file:
init_seeker_cache	Module/seeker-sampler/alloc.c	/^int init_seeker_cache(void)$/;"	f
inst___switch_to	Module/seeker-sampler/probe.c	/^EXPORT_SYMBOL_GPL(inst___switch_to);$/;"	v
inst___switch_to	Module/seeker-sampler/probe.c	/^void inst___switch_to(struct task_struct *from, struct task_struct *to)$/;"	f
inst___switch_to	Module/seeker-scheduler/main.c	/^void inst___switch_to(struct task_struct *from, struct task_struct *to)$/;"	f
inst_release_thread	Module/seeker-sampler/probe.c	/^void inst_release_thread(struct task_struct *t)$/;"	f
inst_sched_fork	Module/seeker-scheduler/main.c	/^void inst_sched_fork(struct task_struct *new, int clone_flags)$/;"	f
inst_schedule	Module/seeker-sampler/probe.c	/^EXPORT_SYMBOL_GPL(inst_schedule);$/;"	v
inst_schedule	Module/seeker-sampler/probe.c	/^int inst_schedule(struct kprobe *p, struct pt_regs *regs)$/;"	f
inst_schedule	Module/seeker-scheduler/main.c	/^int inst_schedule(struct kprobe *p, struct pt_regs *regs)$/;"	f
inst_smp_apic_pmu_interrupt	Module/seeker-sampler/probe.c	/^void inst_smp_apic_pmu_interrupt(struct pt_regs *regs)$/;"	f
instr_sum	Module/include/seeker.h	/^	unsigned long long instr_sum;$/;"	m	struct:__anon9
int_callbacks	Module/seeker-sampler/intr.c	/^struct struct_int_callbacks int_callbacks = {NULL,NULL,NULL,NULL,NULL};$/;"	v	typeref:struct:struct_int_callbacks
int_flag	Module/pmu/pmu.h	/^	u32 int_flag:1;$/;"	m	struct:__anon13
interval	Module/include/seeker.h	/^	unsigned long long interval;$/;"	m	struct:__anon3
interval	Module/include/seeker.h	/^	unsigned long long interval;$/;"	m	struct:__anon4
interval_count	Module/seeker-scheduler/mutate.c	/^u64 interval_count;$/;"	v
interval_jiffies	Module/seeker-scheduler/main.c	/^static u64 interval_jiffies;$/;"	v	file:
inv_flag	Module/pmu/pmu.h	/^	u32 inv_flag:1;$/;"	m	struct:__anon13
ipmi_address	Module/power/power.c	/^struct ipmi_addr ipmi_address;$/;"	v	typeref:struct:ipmi_addr
is_interrupt	Module/seeker-sampler/intr.h	/^	int (*is_interrupt)(int);$/;"	m	struct:struct_int_callbacks
jp___switch_to	Module/seeker-sampler/probe.c	/^struct jprobe jp___switch_to = {$/;"	v	typeref:struct:jprobe
jp___switch_to	Module/seeker-scheduler/main.c	/^struct jprobe jp___switch_to = {$/;"	v	typeref:struct:jprobe
jp_inst___switch_to	Module/seeker-scheduler/main.c	/^struct jprobe jp_inst___switch_to = {$/;"	v	typeref:struct:jprobe
jp_release_thread	Module/seeker-sampler/probe.c	/^struct jprobe jp_release_thread = {$/;"	v	typeref:struct:jprobe
jp_sched_fork	Module/seeker-scheduler/main.c	/^struct jprobe jp_sched_fork = {$/;"	v	typeref:struct:jprobe
jp_smp_pmu_interrupt	Module/seeker-sampler/probe.c	/^struct jprobe jp_smp_pmu_interrupt = {$/;"	v	typeref:struct:jprobe
kp_schedule	Module/seeker-sampler/probe.c	/^struct kprobe kp_schedule = {$/;"	v	typeref:struct:kprobe
kp_schedule	Module/seeker-scheduler/main.c	/^struct kprobe kp_schedule = {$/;"	v	typeref:struct:kprobe
kprobes_registered	Module/seeker-sampler/main.c	/^static int kprobes_registered = 0;$/;"	v	file:
last_high	Module/tsc/tsc.h	/^	u32 last_high;$/;"	m	struct:__anon12
last_low	Module/tsc/tsc.h	/^	u32 last_low;$/;"	m	struct:__anon12
length	Scripts/Array.h	/^int Array<T>::length(){$/;"	f	class:Array
log_block	Module/seeker-sampler/alloc.h	/^struct log_block {$/;"	s
log_create	Module/seeker-sampler/log.c	/^struct log_block *log_create(void)$/;"	f
log_ev_masks	Module/seeker-sampler/main.c	/^unsigned int log_ev_masks[MAX_COUNTERS_PER_CPU];$/;"	v
log_events	Module/seeker-sampler/main.c	/^int log_events[MAX_COUNTERS_PER_CPU];$/;"	v
log_finalize	Module/seeker-sampler/log.c	/^void log_finalize(void)$/;"	f
log_init	Module/seeker-sampler/log.c	/^void log_init(void)$/;"	f
log_lock	Module/seeker-sampler/log.c	/^static spinlock_t log_lock = SPIN_LOCK_UNLOCKED;$/;"	v	file:
log_num_events	Module/seeker-sampler/main.c	/^int log_num_events = 0;$/;"	v
log_read	Module/seeker-sampler/log.c	/^int log_read(struct file* file_ptr, $/;"	f
low	Module/fpmu/fpmu.h	/^	u32 low:32;$/;"	m	struct:__anon18
low	Module/fpmu/fpmu.h	/^	u32 low;$/;"	m	struct:__anon17
low	Module/pmu/pmu.h	/^	u32 low:32;$/;"	m	struct:__anon15
low	Module/pmu/pmu.h	/^	u32 low;$/;"	m	struct:__anon14
low	Module/tsc/tsc.h	/^	u32 low;$/;"	m	struct:__anon12
low	Scripts/iconfig.h	/^		double low,high;$/;"	m	class:SPLINE
main	Scripts/debugd.c	/^int main (int argc, char** argv) $/;"	f
main	Scripts/decodedebug.c	/^main(int argc, char **argv, char **envp){$/;"	f
main	Scripts/decodelog.c	/^main(int argc, char **argv, char **envp){$/;"	f
main	Scripts/interp.C	/^int main(int argc, char *argv[]){$/;"	f
main	Scripts/maxmin.C	/^int main(int argc, char * argv[]){$/;"	f
main	Scripts/powersample.c	/^int main(int argc,char *argv[])$/;"	f
main	Scripts/seekerd.c	/^int main (int argc, char** argv) $/;"	f
main	Scripts/smooth.C	/^int main(int argc, char *argv[]){$/;"	f
make_dir	Scripts/seeker.pm	/^sub make_dir{$/;"	s
mask	Module/pmu/pmu.h	/^	u32 mask;$/;"	m	struct:__anon15
masks	Module/include/seeker.h	/^	unsigned int masks[MAX_COUNTERS_PER_CPU];$/;"	m	struct:__anon7
max	Scripts/Array.h	/^Array<T> max(Array<T> A, Array<T> B){$/;"	f
max_state_in_system	Module/seeker-scheduler/state.c	/^unsigned int max_state_in_system = 0;$/;"	v
max_state_possible	Module/seeker-scheduler/state.c	/^int max_state_possible[NR_CPUS] = {0};$/;"	v
mdev_registered	Module/seeker-sampler/main.c	/^static int mdev_registered = 0;$/;"	v	file:
min	Scripts/Array.h	/^Array<T> min(Array<T> A, Array<T> B){$/;"	f
msrs_init	Module/seeker-sampler/sample.c	/^int msrs_init(void)$/;"	f
mut	Module/include/seeker.h	/^		debug_mutator_t mut;$/;"	m	union:__anon5::__anon6
mva	Scripts/smooth.C	/^Array<T> mva(Array<Array<T> > * data, int ind, int window){$/;"	f
n	Scripts/Array.h	/^		int n;$/;"	m	class:Array
name	Module/include/seeker.h	/^	char name[16];$/;"	m	struct:__anon9
next	Module/seeker-sampler/alloc.h	/^	struct log_block *next;$/;"	m	struct:log_block	typeref:struct:log_block::log_block
next	Module/seeker-scheduler/debug.h	/^	struct debug_block *next;$/;"	m	struct:debug_block	typeref:struct:debug_block::debug_block
num_counters	Module/include/seeker.h	/^	unsigned char num_counters;$/;"	m	struct:__anon7
num_states	Module/scpufreq/scpufreq.h	/^	unsigned int num_states;$/;"	m	struct:freq_info_t
oper	Scripts/iconfig.h	/^	char oper;$/;"	m	struct:__anon19
oper	Scripts/iconfig.h	/^T oper(T A, T B, char oper){$/;"	f
operation_t	Scripts/iconfig.h	/^}operation_t;$/;"	t	typeref:struct:__anon19
operations	Scripts/iconfig.h	/^operation_t operations[TOTAL_COLUMNS] = {$/;"	v
operator !=	Scripts/Array.h	/^Array<T> Array<T>::operator!=(T A){$/;"	f	class:Array
operator !=	Scripts/Array.h	/^bool Array<T>::operator!=(Array<T> A){$/;"	f	class:Array
operator *	Scripts/Array.h	/^Array<T> Array<T>::operator*(Array<T> A){$/;"	f	class:Array
operator *	Scripts/Array.h	/^Array<T> Array<T>::operator*(T B){$/;"	f	class:Array
operator *=	Scripts/Array.h	/^void Array<T>::operator*=(Array<T> A){$/;"	f	class:Array
operator *=	Scripts/Array.h	/^void Array<T>::operator*=(T A){$/;"	f	class:Array
operator +	Scripts/Array.h	/^Array<T> Array<T>::operator+(Array<T> A){$/;"	f	class:Array
operator +	Scripts/Array.h	/^Array<T> Array<T>::operator+(T B){$/;"	f	class:Array
operator ++	Scripts/Array.h	/^Array<T> Array<T>::operator++(int dummy){$/;"	f	class:Array
operator ++	Scripts/Array.h	/^Array<T> Array<T>::operator++(void){$/;"	f	class:Array
operator +=	Scripts/Array.h	/^void Array<T>::operator+=(Array<T> A){$/;"	f	class:Array
operator -	Scripts/Array.h	/^Array<T> Array<T>::operator-(Array<T> A){$/;"	f	class:Array
operator -	Scripts/Array.h	/^Array<T> Array<T>::operator-(T B){$/;"	f	class:Array
operator --	Scripts/Array.h	/^Array<T> Array<T>::operator--(int dummy){$/;"	f	class:Array
operator --	Scripts/Array.h	/^Array<T> Array<T>::operator--(void){$/;"	f	class:Array
operator -=	Scripts/Array.h	/^void Array<T>::operator-=(Array<T> A){$/;"	f	class:Array
operator /	Scripts/Array.h	/^Array<T> Array<T>::operator\/(Array<T> A){$/;"	f	class:Array
operator /	Scripts/Array.h	/^Array<T> Array<T>::operator\/(T B){$/;"	f	class:Array
operator /=	Scripts/Array.h	/^void Array<T>::operator\/=(Array<T> A){$/;"	f	class:Array
operator /=	Scripts/Array.h	/^void Array<T>::operator\/=(T A){$/;"	f	class:Array
operator <	Scripts/Array.h	/^Array<T> Array<T>::operator<(T A){$/;"	f	class:Array
operator <	Scripts/Array.h	/^bool Array<T>::operator<(Array<T> A){$/;"	f	class:Array
operator <<	Scripts/Array.h	/^ostream& operator<<(ostream& out, Array<T> A){$/;"	f
operator <=	Scripts/Array.h	/^Array<T> Array<T>::operator<=(T A){$/;"	f	class:Array
operator <=	Scripts/Array.h	/^bool Array<T>::operator<=(Array<T> A){$/;"	f	class:Array
operator =	Scripts/Array.h	/^void Array<T>::operator=(Array<T> N){$/;"	f	class:Array
operator ==	Scripts/Array.h	/^Array<T> Array<T>::operator==(T A){$/;"	f	class:Array
operator ==	Scripts/Array.h	/^bool Array<T>::operator==(Array<T> A){$/;"	f	class:Array
operator >	Scripts/Array.h	/^Array<T> Array<T>::operator>(T A){$/;"	f	class:Array
operator >	Scripts/Array.h	/^bool Array<T>::operator>(Array<T> A){$/;"	f	class:Array
operator >=	Scripts/Array.h	/^Array<T> Array<T>::operator>=(T A){$/;"	f	class:Array
operator >=	Scripts/Array.h	/^bool Array<T>::operator>=(Array<T> A){$/;"	f	class:Array
operator >>	Scripts/Array.h	/^istream& operator>>(istream& in, Array<T> &A){$/;"	f
operator []	Scripts/Array.h	/^T& Array<T>::operator[](int index){$/;"	f	class:Array
operator ^	Scripts/Array.h	/^Array<T> Array<T>::operator^(T B){$/;"	f	class:Array
os0	Module/fpmu/fpmu.h	/^	u32 os0:1;$/;"	m	struct:__anon16
os1	Module/fpmu/fpmu.h	/^	u32 os1:1;$/;"	m	struct:__anon16
os2	Module/fpmu/fpmu.h	/^	u32 os2:1;$/;"	m	struct:__anon16
os_flag	Module/pmu/pmu.h	/^	u32 os_flag:1;$/;"	m	struct:__anon13
os_flag	Module/seeker-sampler/main.c	/^int os_flag = 0;$/;"	v
outfile	Scripts/debugd.c	/^static FILE *infile, *outfile;$/;"	v	file:
outfile	Scripts/seekerd.c	/^static FILE *infile, *outfile;$/;"	v	file:
outfile_name	Scripts/debugd.c	/^char outfile_prefix[100], outfile_name[100];$/;"	v
outfile_name	Scripts/seekerd.c	/^char outfile_prefix[100], outfile_name[100];$/;"	v
outfile_prefix	Scripts/debugd.c	/^char outfile_prefix[100], outfile_name[100];$/;"	v
outfile_prefix	Scripts/seekerd.c	/^char outfile_prefix[100], outfile_name[100];$/;"	v
pc_flag	Module/pmu/pmu.h	/^	u32 pc_flag:1;$/;"	m	struct:__anon13
pid	Module/include/seeker.h	/^	unsigned int pid;$/;"	m	struct:__anon3
pid	Module/include/seeker.h	/^	unsigned int pid;$/;"	m	struct:__anon8
pid	Module/include/seeker.h	/^	unsigned int pid;$/;"	m	struct:__anon9
pidtab_entry	Module/include/seeker.h	/^		pidtab_entry_t pidtab_entry;$/;"	m	union:__anon10::__anon11
pidtab_entry_t	Module/include/seeker.h	/^} pidtab_entry_t;$/;"	t	typeref:struct:__anon9
pmi0	Module/fpmu/fpmu.h	/^	u32 pmi0:1;$/;"	m	struct:__anon16
pmi1	Module/fpmu/fpmu.h	/^	u32 pmi1:1;$/;"	m	struct:__anon16
pmi2	Module/fpmu/fpmu.h	/^	u32 pmi2:1;$/;"	m	struct:__anon16
pmu_clear_ovf_status	Module/pmu/pmu.c	/^EXPORT_SYMBOL_GPL(pmu_clear_ovf_status);$/;"	v
pmu_clear_ovf_status	Module/pmu/pmu.c	/^int pmu_clear_ovf_status(int ctr)$/;"	f
pmu_configure_interrupt	Module/pmu/pmu.c	/^EXPORT_SYMBOL_GPL(pmu_configure_interrupt);$/;"	v
pmu_configure_interrupt	Module/pmu/pmu.c	/^int pmu_configure_interrupt(int ctr, u32 low, u32 high)$/;"	f
pmu_disable_interrupt	Module/pmu/pmu.c	/^EXPORT_SYMBOL_GPL(pmu_disable_interrupt);$/;"	v
pmu_disable_interrupt	Module/pmu/pmu.c	/^int pmu_disable_interrupt(int ctr)$/;"	f
pmu_enable_interrupt	Module/pmu/pmu.c	/^EXPORT_SYMBOL_GPL(pmu_enable_interrupt);$/;"	v
pmu_enable_interrupt	Module/pmu/pmu.c	/^int pmu_enable_interrupt(int ctr)$/;"	f
pmu_exit	Module/pmu/pmu.c	/^module_exit(pmu_exit);$/;"	v
pmu_exit	Module/pmu/pmu.c	/^static void __exit pmu_exit(void)$/;"	f	file:
pmu_init	Module/pmu/pmu.c	/^module_init(pmu_init);$/;"	v
pmu_init	Module/pmu/pmu.c	/^static int __init pmu_init(void)$/;"	f	file:
pmu_init_msrs	Module/pmu/pmu.c	/^EXPORT_SYMBOL_GPL(pmu_init_msrs);$/;"	v
pmu_init_msrs	Module/pmu/pmu.c	/^void pmu_init_msrs(void)$/;"	f
pmu_intr	Module/seeker-sampler/main.c	/^int pmu_intr = -1;$/;"	v
pmu_is_interrupt	Module/pmu/pmu.c	/^EXPORT_SYMBOL_GPL(pmu_is_interrupt);$/;"	v
pmu_is_interrupt	Module/pmu/pmu.c	/^int pmu_is_interrupt(int ctr)$/;"	f
pmu_val	Module/seeker-scheduler/hwcounters.c	/^u64 pmu_val[NR_CPUS][3];$/;"	v
predict	Scripts/iconfig.h	/^		Array<double> predict(double X){$/;"	f	class:SPLINE
print	Scripts/Array.h	/^void Array<T>::print(int col){$/;"	f	class:Array
print	Scripts/Array.h	/^void Array<T>::print(void){$/;"	f	class:Array
procs	Module/seeker-scheduler/mutate.c	/^inline int procs(int hints,int total, int proc, int total_load)$/;"	f
purge_debug	Module/seeker-scheduler/debug.c	/^void purge_debug(void)$/;"	f
purge_log	Module/seeker-sampler/log.c	/^void purge_log(void)$/;"	f
put_debug	Module/seeker-scheduler/debug.c	/^void put_debug(struct debug_block *p)$/;"	f
put_mask_from_stats	Module/seeker-scheduler/assigncpu.c	/^void put_mask_from_stats(struct task_struct *ts)$/;"	f
read_counters	Module/seeker-scheduler/hwcounters.c	/^void read_counters(int cpu)$/;"	f
read_temp	Module/therm/therm.c	/^EXPORT_SYMBOL_GPL(read_temp);$/;"	v
read_temp	Module/therm/therm.c	/^int read_temp(void)$/;"	f
read_time_stamp	Module/tsc/tsc.c	/^EXPORT_SYMBOL_GPL(read_time_stamp);$/;"	v
read_time_stamp	Module/tsc/tsc.c	/^void read_time_stamp(void)$/;"	f
real_index	Scripts/Array.h	/^int Array<T>::real_index(int ind){$/;"	f	class:Array
receive_message	Module/power/power.c	/^void receive_message(struct ipmi_recv_msg *msg, void *msg_data)$/;"	f
resize	Scripts/Array.h	/^void Array<T>::resize(int nsize){$/;"	f	class:Array
rsvd	Module/pmu/pmu.h	/^	u32 rsvd:1;$/;"	m	struct:__anon13
sample	Module/seeker-sampler/alloc.h	/^	seeker_sampler_entry_t sample;$/;"	m	struct:log_block
sample_freq	Module/seeker-sampler/main.c	/^int sample_freq=-1;$/;"	v
sample_timer	Module/seeker-sampler/intr.c	/^struct timer_list sample_timer;$/;"	v	typeref:struct:timer_list
sample_timer_started	Module/seeker-sampler/intr.c	/^int sample_timer_started = 0;$/;"	v
sch	Module/include/seeker.h	/^		debug_scheduler_t sch;$/;"	m	union:__anon5::__anon6
scheduler_exit	Module/seeker-scheduler/main.c	/^module_exit(scheduler_exit);$/;"	v
scheduler_exit	Module/seeker-scheduler/main.c	/^static void scheduler_exit(void)$/;"	f	file:
scheduler_init	Module/seeker-scheduler/main.c	/^module_init(scheduler_init);$/;"	v
scheduler_init	Module/seeker-scheduler/main.c	/^static int scheduler_init(void)$/;"	f	file:
seeker	Scripts/seeker.pm	/^package seeker;$/;"	p
seeker_cachep	Module/seeker-sampler/alloc.c	/^static struct kmem_cache *seeker_cachep = NULL;$/;"	v	typeref:struct:kmem_cache	file:
seeker_cpufreq_exit	Module/scpufreq/scpufreq.c	/^module_exit(seeker_cpufreq_exit);$/;"	v
seeker_cpufreq_exit	Module/scpufreq/scpufreq.c	/^static void __exit seeker_cpufreq_exit(void)$/;"	f	file:
seeker_cpufreq_init	Module/scpufreq/scpufreq.c	/^module_init(seeker_cpufreq_init);$/;"	v
seeker_cpufreq_init	Module/scpufreq/scpufreq.c	/^static int __init seeker_cpufreq_init(void)$/;"	f	file:
seeker_debug_close	Module/seeker-scheduler/debug.c	/^int seeker_debug_close(struct inode *in, struct file *f)$/;"	f
seeker_debug_fops	Module/seeker-scheduler/debug.c	/^static struct file_operations seeker_debug_fops;$/;"	v	typeref:struct:file_operations	file:
seeker_debug_mdev	Module/seeker-scheduler/debug.c	/^static struct miscdevice seeker_debug_mdev;$/;"	v	typeref:struct:miscdevice	file:
seeker_debug_open	Module/seeker-scheduler/debug.c	/^int seeker_debug_open(struct inode *in, struct file *f)$/;"	f
seeker_debug_read	Module/seeker-scheduler/debug.c	/^ssize_t seeker_debug_read(struct file *file_ptr, char __user *buf, $/;"	f
seeker_init_debug	Module/seeker-scheduler/debug.c	/^int seeker_init_debug(void)$/;"	f
seeker_log_current	Module/seeker-sampler/log.c	/^struct log_block *seeker_log_current;$/;"	v	typeref:struct:log_block
seeker_log_head	Module/seeker-sampler/log.c	/^struct log_block *seeker_log_head;$/;"	v	typeref:struct:log_block
seeker_sample	Module/include/seeker.h	/^		seeker_sample_t seeker_sample;$/;"	m	union:__anon10::__anon11
seeker_sample_close	Module/seeker-sampler/io.c	/^int seeker_sample_close(struct inode *in, struct file *f)$/;"	f
seeker_sample_def	Module/include/seeker.h	/^		seeker_sample_def_t seeker_sample_def;$/;"	m	union:__anon10::__anon11
seeker_sample_def_t	Module/include/seeker.h	/^} seeker_sample_def_t;$/;"	t	typeref:struct:__anon7
seeker_sample_fops	Module/seeker-sampler/main.c	/^static struct file_operations seeker_sample_fops = {$/;"	v	typeref:struct:file_operations	file:
seeker_sample_log_init	Module/seeker-sampler/main.c	/^static int seeker_sample_log_init(void)$/;"	f	file:
seeker_sample_log_read	Module/seeker-sampler/io.c	/^ssize_t seeker_sample_log_read(struct file *file_ptr, char __user *buf, $/;"	f
seeker_sample_mdev	Module/seeker-sampler/main.c	/^static struct miscdevice seeker_sample_mdev = {$/;"	v	typeref:struct:miscdevice	file:
seeker_sample_open	Module/seeker-sampler/io.c	/^int seeker_sample_open(struct inode *in, struct file * f)$/;"	f
seeker_sample_t	Module/include/seeker.h	/^} seeker_sample_t; $/;"	t	typeref:struct:__anon8
seeker_sampler_entry_t	Module/include/seeker.h	/^} seeker_sampler_entry_t;$/;"	t	typeref:struct:__anon10
seeker_sampler_exit	Module/seeker-sampler/main.c	/^module_exit(seeker_sampler_exit);$/;"	v
seeker_sampler_exit	Module/seeker-sampler/main.c	/^static void __exit seeker_sampler_exit(void)$/;"	f	file:
seeker_sampler_exit_handler	Module/seeker-sampler/main.c	/^void seeker_sampler_exit_handler(void)$/;"	f
seeker_sampler_init	Module/seeker-sampler/main.c	/^module_init(seeker_sampler_init);$/;"	v
seeker_sampler_init	Module/seeker-sampler/main.c	/^static int __init seeker_sampler_init(void)$/;"	f	file:
set_freq	Module/scpufreq/scpufreq.c	/^EXPORT_SYMBOL_GPL(set_freq);$/;"	v
set_freq	Module/scpufreq/scpufreq.c	/^int set_freq(unsigned int cpu, unsigned int freq_ind)$/;"	f
slope	Scripts/iconfig.h	/^		Array<double> slope;$/;"	m	class:SPLINE
split	Scripts/Array.h	/^Array<T> split(const char *sep, char *str){$/;"	f
split	Scripts/Array.h	/^Array<int> split(char *sep, char*str){$/;"	f
start_debug	Module/seeker-scheduler/debug.c	/^static struct debug_block *start_debug = NULL;$/;"	v	typeref:struct:debug_block	file:
state	Module/seeker-scheduler/state.h	/^	short state;$/;"	m	struct:state_desc
state_change	Module/seeker-scheduler/main.c	/^static void state_change(unsigned long param)$/;"	f	file:
state_change_timer	Module/seeker-scheduler/main.c	/^static struct timer_list state_change_timer;$/;"	v	typeref:struct:timer_list	file:
state_desc	Module/seeker-scheduler/state.h	/^struct state_desc{$/;"	s
state_matrix	Module/seeker-scheduler/mutate.c	/^int state_matrix[NR_CPUS][MAX_STATES];$/;"	v
states	Module/seeker-scheduler/state.c	/^struct state_desc states[MAX_STATES];$/;"	v	typeref:struct:state_desc
states_lock	Module/seeker-scheduler/state.c	/^spinlock_t states_lock;$/;"	v
struct_int_callbacks	Module/seeker-sampler/intr.h	/^struct struct_int_callbacks{$/;"	s
sys_counters	Module/seeker-scheduler/hwcounters.c	/^int sys_counters[NR_CPUS][3];$/;"	v
table	Module/scpufreq/scpufreq.h	/^	unsigned int table[MAX_STATES];$/;"	m	struct:freq_info_t
temperature	Module/therm/therm.c	/^int temperature[NR_CPUS] = {0};$/;"	v
therm_exit	Module/therm/therm.c	/^module_exit(therm_exit);$/;"	v
therm_exit	Module/therm/therm.c	/^static void __exit therm_exit(void)$/;"	f	file:
therm_init	Module/therm/therm.c	/^module_init(therm_init);$/;"	v
therm_init	Module/therm/therm.c	/^static int __init therm_init(void)$/;"	f	file:
therm_init_msrs	Module/therm/therm.c	/^EXPORT_SYMBOL_GPL(therm_init_msrs);$/;"	v
therm_init_msrs	Module/therm/therm.c	/^void therm_init_msrs(void)$/;"	f
time_stamp	Module/tsc/tsc.c	/^tstamp_t time_stamp[NR_CPUS] = {$/;"	v
total_cycles	Module/include/seeker.h	/^	unsigned long long total_cycles;$/;"	m	struct:__anon9
total_online_cpus	Module/seeker-scheduler/main.c	/^int total_online_cpus = 0;$/;"	v
ts	Module/seeker-sampler/sample.c	/^struct task_struct *ts[NR_CPUS] = {NULL};$/;"	v	typeref:struct:task_struct
ts	Module/seeker-scheduler/main.c	/^struct task_struct *ts[NR_CPUS] = {NULL};$/;"	v	typeref:struct:task_struct
tsc__exit	Module/tsc/tsc.c	/^module_exit(tsc__exit);$/;"	v
tsc__exit	Module/tsc/tsc.c	/^static void __exit tsc__exit(void)$/;"	f	file:
tsc__init	Module/tsc/tsc.c	/^module_init(tsc__init);$/;"	v
tsc__init	Module/tsc/tsc.c	/^static int __init tsc__init(void)$/;"	f	file:
tsc_init_msrs	Module/tsc/tsc.c	/^EXPORT_SYMBOL_GPL(tsc_init_msrs);$/;"	v
tsc_init_msrs	Module/tsc/tsc.c	/^void tsc_init_msrs(void)$/;"	f
tstamp_t	Module/tsc/tsc.h	/^}tstamp_t;$/;"	t	typeref:struct:__anon12
type	Module/include/seeker.h	/^	int type;$/;"	m	struct:__anon10
type	Module/include/seeker.h	/^	int type;$/;"	m	struct:__anon5
typecast	Scripts/Array.h	/^Array<T> typecast(Array<U> B){$/;"	f
u	Module/include/seeker.h	/^	} u;$/;"	m	struct:__anon10	typeref:union:__anon10::__anon11
u	Module/include/seeker.h	/^	}u;$/;"	m	struct:__anon5	typeref:union:__anon5::__anon6
update_state_matrix	Module/seeker-scheduler/mutate.c	/^void update_state_matrix(int *cpu_state, int delta)$/;"	f
usage	Scripts/debugd.c	/^void usage(char *argv[])$/;"	f
usage	Scripts/seekerd.c	/^void usage(char *argv[])$/;"	f
user	Module/power/power.c	/^ipmi_user_t user;$/;"	v
user_handle	Module/power/power.c	/^struct ipmi_user_hndl user_handle;$/;"	v	typeref:struct:ipmi_user_hndl
using_seeker	Module/seeker-scheduler/main.c	/^int using_seeker = 1;$/;"	v
usleep_wrapper	Scripts/debugd.c	/^unsigned int usleep_wrapper(unsigned int time)$/;"	f
usleep_wrapper	Scripts/seekerd.c	/^unsigned int usleep_wrapper(unsigned int time)$/;"	f
usr0	Module/fpmu/fpmu.h	/^	u32 usr0:1;$/;"	m	struct:__anon16
usr1	Module/fpmu/fpmu.h	/^	u32 usr1:1;$/;"	m	struct:__anon16
usr2	Module/fpmu/fpmu.h	/^	u32 usr2:1;$/;"	m	struct:__anon16
usr_flag	Module/pmu/pmu.h	/^	u32 usr_flag:1;$/;"	m	struct:__anon13
warn	Module/include/seeker.h	100;"	d
within	Scripts/iconfig.h	/^		bool within(double X){$/;"	f	class:SPLINE
zeroes	Scripts/Array.h	/^void Array<T>::zeroes(void){$/;"	f	class:Array
~Array	Scripts/Array.h	/^Array<T>::~Array(){$/;"	f	class:Array
