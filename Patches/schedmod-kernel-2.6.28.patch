diff -Naur linux-2.6.28/include/linux/sched.h linux-2.6.28_mod/include/linux/sched.h
--- linux-2.6.28/include/linux/sched.h	2008-12-24 16:26:37.000000000 -0700
+++ linux-2.6.28_mod/include/linux/sched.h	2009-01-04 07:34:21.000000000 -0700
@@ -1,6 +1,8 @@
 #ifndef _LINUX_SCHED_H
 #define _LINUX_SCHED_H
 
+#define SEEKER_PLUGIN_PATCH 1
+
 /*
  * cloning flags:
  */
@@ -135,6 +137,8 @@
 extern unsigned long nr_uninterruptible(void);
 extern unsigned long nr_active(void);
 extern unsigned long nr_iowait(void);
+extern unsigned long weighted_cpuload(const int cpu);
+
 
 struct seq_file;
 struct cfs_rq;
@@ -1356,6 +1360,14 @@
 	unsigned long default_timer_slack_ns;
 
 	struct list_head	*scm_work_list;
+
+	/* Seeker Patch Additions */
+	short seeker_scheduled;
+	short cpustate;
+	u64 interval;
+	u64 inst;
+	u64 re_cy;
+	u64 ref_cy;
 };
 
 /*
diff -Naur linux-2.6.28/kernel/sched.c linux-2.6.28_mod/kernel/sched.c
--- linux-2.6.28/kernel/sched.c	2008-12-24 16:26:37.000000000 -0700
+++ linux-2.6.28_mod/kernel/sched.c	2009-01-04 07:34:37.000000000 -0700
@@ -1800,10 +1800,11 @@
 #ifdef CONFIG_SMP
 
 /* Used instead of source_load when we know the type == 0 */
-static unsigned long weighted_cpuload(const int cpu)
+unsigned long weighted_cpuload(const int cpu)
 {
 	return cpu_rq(cpu)->load.weight;
 }
+EXPORT_SYMBOL_GPL(weighted_cpuload);
 
 /*
  * Is this task likely cache-hot:
